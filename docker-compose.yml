version: "1"

networks:
  api:
    ipam:
      config:
        - subnet: 172.18.0.0/16

services:

  contra-cheque-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: contra-cheque-api
    ports:
      - "80:80"
    environment:
      SERVER_PORT: 80
      TOKEN_SIGNATURE: CCgbVvfCkAx884yCIadHEOSiO3wOw3AY1OCFvXgwD2TNTxDgTuXi3OrDaH4rzEGS0J6gynpO8K13nT70pbAaDGQdhEOk8G6JRtdz
      DB_URL: jdbc:mysql://database:3306/dev?allowPublicKeyRetrieval=true
      DB_USER: root
      DB_PASSWORD: KBf9]xEjq~K
      DB_DRIVER_CLASS: com.mysql.cj.jdbc.Driver
      DB_TIMEOUT: 30000
      DB_MAXIMUM_POOL_SIZE: 3
      DB_DDL_AUTO: update
      DB_OPEN_VIEW:
      AWS_ENDPOINT: http://172.18.0.22:3000
      AWS_ACCESS_KEY: S3RVER
      AWS_SECRET_KEY: S3RVER
      AWS_REGION: us-east-1
      AWS_BUCKET_NAME: funcionarios
      ENTERPRISE_URL: jdbc:mysql://database:3306/principal?allowPublicKeyRetrieval=true
      SPRING_PROFILES_ACTIVE: dev
    networks:
      - api

  database:
    container_name: database
    image: bitnami/mysql:8.0.26-debian-10-r60
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: KBf9]xEjq~K
      MYSQL_ROOT_USER: root
    volumes:
      - ./contra-cheque/src/main/docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - api

  aws-s3rver:
    networks:
      api:
        ipv4_address: 172.18.0.22
    container_name: aws-s3rver
    build:
      context: ./contra-cheque/src/main/docker/bucket
      dockerfile: Dockerfile
    ports:
      - "3000:3000"